package core;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;
import models.Song;

/**
 * Classe che gestisce la pagina per la ricerca delle canzoni
 * @author Cervini Samuele
 * @author Sarzi Sartori Andrea
 */
public class Search extends javax.swing.JFrame {

    Utilities utilities = new Utilities();
    
    /**
     * Verifica se l'utente è entrato con login o accesso libero
     */
    public boolean accesso_libero = false;

    /**
     * Nome di chi è loggato in quel momento
     */
    public String nickname = null;
    
    /**
     * Viene creato il nuovo form della classe
     */
    public Search() {
        initComponents();
    }
    
    /**
     * Ricevo un nickname e un boolean per controllare se l'utente è entrato con accesso libero o con il login
     * @param accesso_libero    Controllo se si è entrati con Accesso Libero o meno
     * @param nickname          Nickname con la quale si è loggati
     */
    public Search(boolean accesso_libero, String nickname) {
        this();
        this.accesso_libero = accesso_libero;
        this.nickname = nickname;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txt_ricerca = new javax.swing.JTextField();
        btn_searchByName = new javax.swing.JButton();
        btn_back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        author_textfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        year_textfield = new javax.swing.JTextField();
        btn_searchByAuthorYear = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listbox = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Accesso Libero");

        txt_ricerca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_ricercaActionPerformed(evt);
            }
        });

        btn_searchByName.setText("Ricerca");
        btn_searchByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchByNameActionPerformed(evt);
            }
        });

        btn_back.setText("Indietro");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        jLabel1.setText("NOME");

        jLabel2.setText("AUTORE");

        author_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                author_textfieldActionPerformed(evt);
            }
        });

        jLabel3.setText("ANNO");

        year_textfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                year_textfieldActionPerformed(evt);
            }
        });

        btn_searchByAuthorYear.setText("Ricerca");
        btn_searchByAuthorYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchByAuthorYearActionPerformed(evt);
            }
        });

        listbox.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titolo", "Autore", "Anno"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listbox.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(listbox);
        if (listbox.getColumnModel().getColumnCount() > 0) {
            listbox.getColumnModel().getColumn(0).setResizable(false);
            listbox.getColumnModel().getColumn(1).setResizable(false);
            listbox.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(143, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_back, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(author_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(year_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_ricerca, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_searchByAuthorYear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_searchByName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(120, 120, 120))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ricerca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_searchByName)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(year_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_searchByAuthorYear))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(author_textfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addComponent(btn_back)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_searchByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchByNameActionPerformed
        ArrayList<Ristorante> list = new ArrayList<>();
        
        String searchedName = txt_ricerca.getText();
        
        //implementare ricerca per nome
        
        
        
        
        
        
        
        DefaultListModel listModel = (DefaultListModel)listbox.getModel();
        listModel.removeAllElements();
        if(list.size() > 0) {
            for (int i = 0; i < list.size(); i++)
            {
                listModel.addElement(list.get(i).nome);
            }
        } else {
            listModel.addElement("Vuoto");
        }
    }//GEN-LAST:event_btn_searchByNameActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        dispose();
        EmotionalSongs emotionalSongs = new EmotionalSongs();
        emotionalSongs.setVisible(true);
    }//GEN-LAST:event_btn_backActionPerformed

    private void year_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_year_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_year_textfieldActionPerformed

    private void author_textfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_author_textfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_author_textfieldActionPerformed

    private void btn_searchByAuthorYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchByAuthorYearActionPerformed
       
        DefaultTableModel listModel = (DefaultTableModel)listbox.getModel();
        
        String author = author_textfield.getText();
        String year = year_textfield.getText();
                
        ArrayList<Object[]> results = utilities.GetSongsByAuthorsAndYears(author, year);        
                
        if (results != null) {
            
            listModel.setRowCount(0);
            
            for (Object[] item : results)
            {
                listModel.addRow(item);
            }       
        }
        else
        {
            listModel.setRowCount(0);
            javax.swing.JOptionPane.showMessageDialog(getContentPane(), "La combinazione tra " + author + " e " + year + " non ha prodotto alcun risultato!" , "Attenzione", javax.swing.JOptionPane.WARNING_MESSAGE);
        }       
    }//GEN-LAST:event_btn_searchByAuthorYearActionPerformed

    private void txt_ricercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_ricercaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ricercaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Search.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Search().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField author_textfield;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_searchByAuthorYear;
    private javax.swing.JButton btn_searchByName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable listbox;
    private javax.swing.JTextField txt_ricerca;
    private javax.swing.JTextField year_textfield;
    // End of variables declaration//GEN-END:variables
}
